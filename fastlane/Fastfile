default_platform(:android)

platform :android do
  desc "Create the APK based on branch type"
  lane :createApk do
    branch = ENV['BRANCH_NAME'] || `git rev-parse --abbrev-ref HEAD`.strip
    commit_message = `git log -1 --pretty=%B`.strip

    puts "Current branch: #{branch}"

    apk_output = ""

    if branch == "main"
      puts commit_message

      version_name_match = commit_message.match(/(\d+\.\d+\.\d+)/)
      version_code_match = commit_message.match(/\((\d+)\)/)
  
      version_name = version_name_match ? version_name_match[1] : "default_version_name"
      version_code = version_code_match ? version_code_match[1] : "default_version_code"
  
    increment_version_code()
    increment_version_name(
      gradle_file_path: "./android/app/build.gradle",
    version_name: version_name)
    sh(" git config --global user.email 'shalinibhatt6263@gmail.com'")
sh("git config --global user.name 'shalinibhatt'")
   
    
    sh("git add ../android/app/build.gradle")
    sh("git commit -m 'Incremented version to #{version_name} (#{version_code})'")
    sh("git push origin #{branch}")
    
      apk_output = gradle(
        tasks: ["clean", "assembleRelease"],
        project_dir: "android"
      )



    elsif branch.start_with?("ticket")
      apk_output = gradle(
        tasks: ["clean", "assembleRelease"],
        project_dir: 'android'
      )

    elsif branch == "dev"
      apk_output = gradle(
        tasks: ["clean", "assembleRelease"],
        project_dir: "android"
      )

    else
      UI.user_error!("Unsupported branch: #{branch}")
    end

    apk_path = Actions.lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]

    puts "Generated APK path: #{apk_path}"

    firebase_app_distribution(
      app: "1:1030095982155:android:d1598ed5483d261ccd87ce",
      testers: "shalini@electorq.com, shalinibhatt6263@gmail.com",
      groups: "yoho",
      release_notes: "Testing for ticket: #{branch}",
      firebase_cli_token: "1//0g8CbFtpsckS-CgYIARAAGBASNgF-L9Irbum-4zbkTPPr3JVxc3WlNidSWNUbxXJWV04wUlP1RMdSYR_7j7TTLWdU7H-tRgCGww",
      apk_path: apk_path
    )
  end

    lane :slack_webhook do
      slack(
        slack_url:"https://hooks.slack.com/services/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",
  message: "App successfully released!",
  success: true,        # Optional, defaults to true.
  payload: {  # Optional, lets you specify any number of your own Slack attachments.
    "Build Date" => Time.new.to_s,
    "Built by" => "Jenkins",
  },
  default_payloads: [:git_branch, :git_author], # Optional, lets you specify default payloads to include. Pass an empty array to suppress all the default payloads.
  
)
    end

end
